library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
mpg
plot(predicted_values, model2_residuals, col = 'blue')
library(tidyverse)
#library(here)
# Replace the _____ with the correct file name
df <- read_csv('Group_5.csv')
model1 <-lm(price ~ Lot_size, data = df)
predicted_values <- predict(model1)
model1_residuals <- residuals(model1)
predicted_values <- predict(model1)
model1_rmse <- sqrt(mean(model1_residuals^2))
# Create residuals plot
plot(predicted_values, model1_residuals, pch = 16, col = "blue", xlab = "Predicted", ylab = "Residuals")
# Add a horizontal line at y = 0
abline(h = 0, col = "red")
plot(df$Lot_size,df$price, col = 'blue')
abline(model1, col = 'red')
summary(model1)
model2 <-lm(price ~ House_size, data = df)
model2_residuals <- residuals(model2)
predicted_values <- predict(model2)
model2_rmse <- sqrt(mean(model2_residuals^2))
# Create residuals plot
plot(predicted_values, model2_residuals, pch = 16, col = "blue", xlab = "Predicted", ylab = "Residuals")
# Add a horizontal line at y = 0
abline(h = 0, col = "red")
plot(df$House_size,df$price, col = 'blue')
abline(model2, col = 'red')
summary(model2)
new_df <- bind_cols(predicted_values, model2_residuals)
plot(predicted_values, model2_residuals, col = 'blue')
abline(h=0, col = 'red')
plot(df$House_size,df$price, col = 'blue')
abline(model2, col = 'red')
# Create histogram of residuals
hist(model2_residuals, breaks = "FD", col = "blue", main = "Frequency", xlab = "Residuals")
# Add a vertical line at zero
abline(v = 0, col = "red")
plot(predicted_values, model2_residuals, col = 'blue')
abline(h=0, col = 'red')
plot(df$House_size, model2_residuals, col = 'blue', ylim=c(-300,300))
abline(h=0, col = 'red')
abline(h=150, col ='green')
ser <- sigma(model2)
plot(predicted_values, model2_residuals, col = 'blue')
abline(h=0, col = 'red')
plot(df$House_size, model2_residuals, col = 'blue', ylim=c(-300,300))
abline(h=0, col = 'red')
abline(h=150,h=-150, col ='green')
plot(predicted_values, model2_residuals, col = 'blue')
abline(h=0, col = 'red')
plot(df$House_size, model2_residuals, col = 'blue', ylim=c(-300,300))
abline(h=0, col = 'red')
abline(h=150, col ='green')
abline(h=-150, col ='green')
ser <- sigma(model2)
df <- read.csv('cars.csv')
setwd("C:/Users/tejus/OneDrive/Desktop/DataAnalytics Final Project")
df <- read.csv('cars.csv')
#Plotting Individual variables vs price
plot(df$mileage,df$price, col = 'blue', xlab="Mileage", ylab="Price")
plot(df$year,df$price, col = 'blue', xlab="Year", ylab="Price")
plot(df$engineSize,df$price, col = 'blue', xlab="Engine Size", ylab="Price")
plot(df$mpg,df$price, col = 'blue', xlab="MPG", ylab="Price")
plot(df$engineSize,df$mpg, col = 'blue', xlab="engineSize", ylab="MPG")
#Plotting Histograms for the Explanatory Variables
par(mfrow=c(3,2))
hist(df$year, breaks = "FD", col = "blue", main = "Histogram", xlab = "Year")
hist(df$mileage, breaks = "FD", col = "blue", main = "Histogram", xlab = "Mileage")
hist(df$mpg, breaks = "FD", col = "blue", main = "Histogram", xlab = "Mpg")
hist(df$price, breaks = "FD", col = "blue", main = "Histogram", xlab = "Price")
hist(df$engineSize, breaks = "FD", col = "blue", main = "Histogram", xlab = "Engine Size")
#Creating Model1 Mileage vs Price
model1 <- lm(df$price ~ df$mileage, data=df)
predicted_values_model1 <- predict(model1)
model1_residuals <- residuals(model1)
summary(model1)
#Creating Model2 Model Year vs Price
model2 <- lm(df$price ~ df$year, data=df)
predicted_values_model2 <- predict(model2)
model2_residuals <- residuals(model2)
summary(model2)
#Creating Model3 Mpg vs Price
model3 <- lm(df$price ~ df$mpg, data=df)
predicted_values_model3 <- predict(model3)
model3_residuals <- residuals(model3)
summary(model3)
#Creating Model4 EngineSize vs Price
model4 <- lm(df$price ~ df$engineSize, data=df)
predicted_values_model4 <- predict(model4)
model4_residuals <- residuals(model4)
summary(model4)
#Generating Model with Line of Best Fit
plot(df$mileage, df$price, col = 'blue')
abline(model1, col='red')
plot(df$year, df$price, col = 'blue')
abline(model2, col='red')
plot(df$mpg, df$price, col = 'blue')
abline(model3, col='red')
plot(df$engineSize, df$price, col = 'blue')
abline(model4, col='red')
#Creating Correlation Matrix of Explanatory Variables
install.packages("corrgram")
library("corrgram")
cor(df$price, df$mileage)
cor(df$price, df$year)
cor(df$price, df$mpg)
cor(df$price, df$engineSize)
corrgram(df, lower.panel=panel.shade, upper.panel=panel.cor)
#Checking Linearity of Model4
plot(df$engineSize, model4_residuals, col="blue",xlab = "Engine Size", ylab= "Residuals")
abline(h=0, col='red')
plot(df$engineSize,df$price, col = 'blue',xlab = "Engine Size", ylab= "Price")
abline(model4, col='red')
#Checking Normality of Model4
hist(model4_residuals, col="blue")
abline(v = 0, col = "red")
#Checking Constant Variablity of Model4
plot(df$engineSize, model4_residuals, col="blue",xlab = "Engine Size", ylab= "Residuals")
abline(h=0, col='red')
#Model Reassessment- Checking Constant Variability for other Models
plot(df$mileage, model1_residuals, col="blue",xlab = "Mileage", ylab= "Residuals")
abline(h=0, col='red')
plot(df$year, model2_residuals, col="blue",xlab = "Year", ylab= "Residuals")
abline(h=0, col='red')
plot(df$mpg, model3_residuals, col="blue",xlab = "MPG", ylab= "Residuals")
abline(h=0, col='red')
#Applying Log Transform to Explanatory and Response Variables
#Transformed model 1
transformed_explanatory1 <- log10(df$mileage)
transformed_response <- log10(df$price)
model1 <- lm(transformed_response ~ transformed_explanatory1, data=df)
summary(model1)
#Transformed model 2
transformed_explanatory2 <- log10(df$year)
transformed_response <- log10(df$price)
model2 <- lm(transformed_response ~ transformed_explanatory2, data=df)
summary(model2)
#Transformed model 3
transformed_explanatory3 <- log10(df$mpg)
transformed_response <- log10(df$price)
model3 <- lm(transformed_response ~ transformed_explanatory3, data=df)
summary(model3)
#Transformed model 4
transformed_explanatory4 <- log10(df$engineSize)
transformed_response <- log10(df$price)
model4 <- lm(transformed_response ~ transformed_explanatory4,data=df)
summary(model4)
#Checking Linearity for Model2 with Transformed Variables
transformed_explanatory2 <- log10(df$year)
transformed_response <- log10(df$price)
model2 <- lm(transformed_response ~ transformed_explanatory2, data=df)
plot(transformed_explanatory2, transformed_response, col="blue",xlab = "Log Model Year", ylab="Log Price")
abline(model2, col='red')
#Checking Normality for Model2 with Transformed Variables
model2_residuals <- residuals(model2)
hist(model2_residuals, col="blue")
abline(v = 0, col = "red")
#Checking Constant Variability for Model2 with Transformed Variables
predicted_value_transformed <- predict(model2)
plot(predicted_value_transformed, model2_residuals, col="blue",xlab="Predicted Values",ylab="Residuals",ylim = c(-1.5,1.5))
abline(h=0, col='red')
abline(h=0.75, col='green')
abline(h=-0.75, col='green')
